<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin" type="text/css"?>
<!--
 *  Copyright (c) 2004 Christopher Ottley.
 *
 *  This file is part of MAF.
 *
 *  MAF is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  MAF is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.

 *  You should have received a copy of the GNU General Public License
 *  along with MAF; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
-->
<!DOCTYPE window SYSTEM "chrome://maf/locale/maf.dtd">

<!--
  TODO: Interface for getting and setting scripts for filetype.
-->

<window id="preferencesdlg"
         title="&maf.preferencesdialog.title;"
         orient="horizontal"
         xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         persist="screenX screenY"
         onload="onLoad()">

<script type="application/x-javascript" src="chrome://maf/content/mafnativefilesave.js"/>
<script type="application/x-javascript" src="chrome://maf/content/maf.js"/>

<script>

  var MafPreferences = GetMafPreferencesServiceClass();

  function onLoad() {
    try {
      loadFromPref();
      window.sizeToContent();
      checkWinOnlyPrefs();
    } catch(e) {
      mafdebug(e);
    }
  }

  function loadFromPref() {
    document.getElementById("txtTempFolder").value = MafPreferences.temp;
    if (MafPreferences.archiveOpenMode == OPENMODE_ALLTABS) {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdOpenTabs");
    } else if (MafPreferences.archiveOpenMode == OPENMODE_SHOWDIALOG) {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdShowOpen");
    } else {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdDoNothing");
    }

    document.getElementById("chkURLRewrite").checked = MafPreferences.urlRewrite;
    document.getElementById("chkSaveExtended").checked = MafPreferences.saveExtendedMetadata;
    document.getElementById("chkClearTempOnClose").checked = MafPreferences.clearTempOnClose;
    document.getElementById("chkAddDocumentWriteOverride").checked = MafPreferences.addDocumentWriteOverride;
    document.getElementById("chkAlertOnArchiveComplete").checked = MafPreferences.alertOnArchiveComplete;

    document.getElementById("chkUseAlternativeSaveComponent").checked = MafPreferences.alternative_save_component;

    document.getElementById("winChkAssociateWithMAFF").checked = MafPreferences.win_associate_maff;
    document.getElementById("winChkAssociateWithMHT").checked = MafPreferences.win_associate_mht;
  }


  function loadDefaultPref() {
    var mpd = MafPreferences.defaultValues();
    document.getElementById("txtTempFolder").value = mpd.temp;
    if (mpd.archiveOpenMode == OPENMODE_ALLTABS) {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdOpenTabs");
    } else if (mpd.archiveOpenMode == OPENMODE_SHOWDIALOG) {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdShowOpen");
    } else {
      document.getElementById("rdOpenOptions").selectedItem = document.getElementById("rdDoNothing");
    }

    document.getElementById("chkURLRewrite").checked = mpd.urlRewrite;
    document.getElementById("chkSaveExtended").checked = mpd.saveExtendedMetadata;
    document.getElementById("chkClearTempOnClose").checked = mpd.clearTempOnClose;
    document.getElementById("chkAddDocumentWriteOverride").checked = mpd.addDocumentWriteOverride;
    document.getElementById("chkAlertOnArchiveComplete").checked = mpd.alertOnArchiveComplete;

    document.getElementById("chkUseAlternativeSaveComponent").checked = mpd.alternative_save_component;

    document.getElementById("winChkAssociateWithMAFF").checked = mpd.win_associate_maff;
    document.getElementById("winChkAssociateWithMHT").checked = mpd.win_associate_mht;
  }


  function checkWinOnlyPrefs() {
    // If not windows, disable windows only preferences
    if (navigator.userAgent.indexOf("Windows") == -1) {
      document.getElementById("winChkAssociateWithMAFF").disabled = true;
      document.getElementById("winChkAssociateWithMHT").disabled = true;
    }
  }

  function saveToPref() {
    MafPreferences.temp = document.getElementById("txtTempFolder").value;

    if (document.getElementById("rdOpenOptions").selectedItem == document.getElementById("rdOpenTabs")) {
      MafPreferences.archiveOpenMode = OPENMODE_ALLTABS;
    } else if (document.getElementById("rdOpenOptions").selectedItem == document.getElementById("rdShowOpen")) {
      MafPreferences.archiveOpenMode = OPENMODE_SHOWDIALOG;
    } else {
      MafPreferences.archiveOpenMode = OPENMODE_NOTHING;
    }

    MafPreferences.urlRewrite = document.getElementById("chkURLRewrite").checked;
    MafPreferences.saveExtendedMetadata = document.getElementById("chkSaveExtended").checked;
    MafPreferences.clearTempOnClose = document.getElementById("chkClearTempOnClose").checked;
    MafPreferences.addDocumentWriteOverride = document.getElementById("chkAddDocumentWriteOverride").checked;
    MafPreferences.alertOnArchiveComplete = document.getElementById("chkAlertOnArchiveComplete").checked;

    MafPreferences.alternative_save_component = document.getElementById("chkUseAlternativeSaveComponent").checked;

    MafPreferences.win_associate_maff = document.getElementById("winChkAssociateWithMAFF").checked;
    MafPreferences.win_associate_mht = document.getElementById("winChkAssociateWithMHT").checked;

    MafPreferences.save();

    if (navigator.userAgent.indexOf("Windows") != -1) {
      MafPreferences.createFileAssociationsNow();
    }
  }

  function browse(textFolder) {
    var initialDir = document.getElementById(textFolder).value;
    var newDir = MafGUI.selectDirectory("Select a folder", initialDir);
    document.getElementById(textFolder).value = newDir;
  }

  function mafdebug(text) {
    var csClass = Components.classes['@mozilla.org/consoleservice;1'];
    var cs = csClass.getService(Components.interfaces.nsIConsoleService);
    cs.logStringMessage(text);
  };

</script>

<vbox flex="1">

<tabbox flex="1">
  <tabs>
    <tab label="&maf.preferencesdialog.tabsoptions;" selected="true"/>
    <tab label="&maf.preferencesdialog.tabswinoptions;"/>
    <tab label="&maf.preferencesdialog.tabadvanced;" />
  </tabs>

  <tabpanels>
   <tabpanel id="optionspanel" orient="vertical">
     <groupbox>
       <caption label="&maf.preferencesdialog.options.description;" />

     <groupbox>
     <hbox>
       <label control="txtTempFolder" value="&maf.preferencesdialog.label.temp;"/>
       <textbox id="txtTempFolder" flex="1" />
       <button label="&maf.preferencesdialog.btnbrowse;" oncommand="browse('txtTempFolder')" />
     </hbox>
     <checkbox id="chkClearTempOnClose" checked="true" label="&maf.preferencesdialog.label.cleartemp;" />
     </groupbox>

     <groupbox>
       <caption label="&maf.preferencesdialog.openmode;" />
       <radiogroup id="rdOpenOptions">
         <radio id="rdShowOpen" value="0" label="&maf.preferencesdialog.openmode.showopen;"/>
         <radio id="rdOpenTabs" value="1" label="&maf.preferencesdialog.openmode.tabs;"/>
         <radio id="rdDoNothing" value="2" label="&maf.preferencesdialog.openmode.nothing;"/>
       </radiogroup>
     </groupbox>

     </groupbox>
   </tabpanel>

   <tabpanel id="windowsspecificoptionspanel" orient="vertical">
     <description>
       &maf.preferencesdialog.winop.label;
     </description>

       <groupbox>
         <caption label="&maf.preferencesdialog.winop.filetypelabel;" />
         <checkbox id="winChkAssociateWithMAFF" checked="false" label="&maf.preferencesdialog.winop.filetypemaff;" />
         <checkbox id="winChkAssociateWithMHT" checked="false" label="&maf.preferencesdialog.winop.filetypemht;" />
       </groupbox>

   </tabpanel>

   <tabpanel id="advancedoptionspanel" orient="vertical">
     <groupbox>
       <caption label="&maf.preferencesdialog.advanced.archivinglabel;" />
       <checkbox id="chkSaveExtended" checked="false" label="&maf.preferencesdialog.openmode.savexmeta;" />
       <checkbox id="chkUseAlternativeSaveComponent" checked="false"
                  label="&maf.preferencesdialog.label.usealternativesavecomponent;" />
       <checkbox id="chkAlertOnArchiveComplete" checked="false"
                  label="&maf.preferencesdialog.label.alertonarchivecomplete;" />
     </groupbox>

     <groupbox>
       <caption label="&maf.preferencesdialog.advanced.extractinglabel;" />
       <checkbox id="chkURLRewrite" checked="false" label="&maf.preferencesdialog.openmode.urlrewrite;" />
       <checkbox id="chkAddDocumentWriteOverride" checked="false"
                  label="&maf.preferencesdialog.label.adddocumentwriteoverride;" />
     </groupbox>

   </tabpanel>

 </tabpanels>
</tabbox>

  <hbox>
    <button id="maf-prefs-loaddefault-button" label="&maf.preferencesdialog.btnloaddefault;" default="true" oncommand="loadDefaultPref();"/>
    <spacer flex="1"/>
    <button id="maf-prefs-save-button" label="&maf.preferencesdialog.btnsave;" default="true" oncommand="saveToPref();"/>
    <button id="maf-prefs-revert-button" label="&maf.preferencesdialog.btnrevert;" oncommand="loadFromPref();"/>
    <button id="maf-prefs-close-button" label="&maf.preferencesdialog.btnclose;" oncommand="window.close();"/>
  </hbox>
</vbox>

</window>
